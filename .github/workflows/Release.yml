name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version number.'
        required: true
      release_notes:
        description: 'Release notes. (optional)'
        required: false
      publish_docker:
        description: 'Publish Dockerfile? true | false'
        default: 'true'
        required: false

jobs:
  prepare_release:
    name: Prepare Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.release_notes }}
          draft: true

  publish_cli:
    name: Publish CLI
    runs-on: ubuntu-latest
    needs: [prepare_release]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: null511/PixelGraph
          token: ${{ secrets.PG_TOKEN }}
          submodules: recursive
      - name: Publish CLI Binaries
        run: |
          cd PixelGraph.CLI
          dotnet publish -c Release -r win-x64 -o ../publish/win-cli-x64 -p:PublishSingleFile=true --self-contained false
          dotnet publish -c Release -r linux-x64 -o ../publish/linux-cli-x64 -p:PublishSingleFile=true --self-contained false
          dotnet publish -c Release -r osx-x64 -o ../publish/osx-cli-x64 -p:PublishSingleFile=true --self-contained false
      - name: Release Windows-CLI-x64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: publish/win-cli-x64/PixelGraph.exe
          asset_name: PixelGraph-CLI-Windows-x64.exe
          asset_content_type: application/exe
      - name: Release Linux-CLI-x64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: publish/linux-cli-x64/PixelGraph
          asset_name: PixelGraph-CLI-Linux-x64
          asset_content_type: application/exe
      - name: Release OSX-CLI-x64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: publish/osx-cli-x64/PixelGraph
          asset_name: PixelGraph-CLI-OSX-x64
          asset_content_type: application/exe

  publish_ui:
    name: Publish UI
    runs-on: windows-latest
    needs: [prepare_release]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: null511/PixelGraph
          token: ${{ secrets.PG_TOKEN }}
          submodules: recursive
      - name: Publish Windows-UI-x64 Binary
        run: |
          dotnet build PixelGraph.Rendering -c Release
          dotnet publish PixelGraph.UI -c Release -r win-x64 -o publish/win-ui-x64 -p:PublishSingleFile=true --self-contained false
          dotnet publish PixelGraph.UI -c ReleaseNoRender -r win7-x64 -o publish/wine-ui-x64 -p:PublishReadyToRun=true -p:PublishReadyToRunShowWarnings=true --self-contained
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          filename: publish/WineHQ-UI-x64.zip
          path: publish/wine-ui-x64/
      - name: Release Windows-UI-x64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: publish/win-ui-x64/PixelGraph.exe
          asset_name: PixelGraph-UI-Windows-x64.exe
          asset_content_type: application/exe
      - name: Release Wine-UI-x64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: publish/WineHQ-UI-x64.zip
          asset_name: PixelGraph-UI-WineHQ-x64.zip
          asset_content_type: application/zip

  publish_release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: [prepare_release, publish_cli, publish_ui]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: null511/PixelGraph
          token: ${{ secrets.PG_TOKEN }}
          submodules: recursive
      - name: Publish Dockerfile
        if: ${{ github.event.inputs.publish_docker == 'true' }}
        uses: docker/build-push-action@v1
        with:
          repository: null511/pixelgraph
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          tags: latest,${{ github.event.inputs.version }}
      - name: Publish Release
        uses: eregon/publish-release@v1.0.3
        if: github.event.inputs.release_notes != 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.prepare_release.outputs.release_id }}
